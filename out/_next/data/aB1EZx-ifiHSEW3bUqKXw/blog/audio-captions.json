{"pageProps":{"id":"audio-captions","meta":{"title":"A failed app idea and some new learnings","description":"If we could generate transcript files offline, how can we integrate it with audio files. I was thinking about something similar to external subtitle files used in video players. Came to know that it is possible with the help of TextTracks and WebVTT format. I did a small POC and it went well.","published":false,"publishedAt":"2023-03-05T00:00:00.000Z","updatedAt":"2023-03-05T00:00:00.000Z","category":"tech","image":"banners/70","keywords":["web","javascript","audio"],"authors":["Krishna Mohan A M"]},"content":"<p>Last week while browsing hacker news, I came across a discussion on <a href=\"https://news.ycombinator.com/item?id=34793116\">Spotify and podcasts</a>. There i saw few features users requested in podcasts app and thought of creating a new one to address few of those feature requests. Among those, the major feature i liked and want to implement was the transcript feature. I really liked the concept of showing captions/subtitles similar to music lyrics in Spotify app.</p>\n<p>At first I thought of using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> to convert audio to text, and wondered why nobody is using the same. Well I know the reason now, we <a href=\"https://wicg.github.io/speech-api/#issue-2c77f5e1\">cannot feed any stream</a> to the recognition service. It works only with user agent controlled input device.</p>\n<h2>Workaround</h2>\n<p>I was devastated for some time. Then i thought, if we could generate transcript files offline, how can we integrate it with audio files. I was thinking about something similar to external subtitle files used in video players. Came to know that it is possible with the help of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\">TextTracks</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API\">WebVTT format</a>. I did a small POC and it went well.</p>\n<h2>Code</h2>\n<p>Here is the audio html tag with multiple text tracks.</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>audio</span> \n    <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>podcast_audio<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sounds/podcast_sample.mp3<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>px-2 w-full<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sounds/podcast_sample.mp3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        Download <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>audio</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>audio</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>track</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>caption_en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">default</span> <span class=\"token attr-name\">kind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>captions<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srclang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sounds/podcast_sample.vtt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>track</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subtitle_de<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">\"</span> <span class=\"token attr-name\">default</span> <span class=\"token attr-name\">kind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subtitles<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srclang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>de<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sounds/podcast_sample_02.vtt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>audio</span><span class=\"token punctuation\">></span></span>  \n</code></pre></div>\n<p>We need to add some javascript code to render captions as audio tag do not have rendering space. This is not required for video elements</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> textTracks <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'podcast_audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">textTracks</span><span class=\"token punctuation\">;</span>        \n    <span class=\"token keyword\">var</span> activeTextTrack <span class=\"token operator\">=</span> <span class=\"token function\">getActiveTextTrack</span><span class=\"token punctuation\">(</span>textTracks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    textTracks<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>            \n        activeTextTrack <span class=\"token operator\">=</span> <span class=\"token function\">getActiveTextTrack</span><span class=\"token punctuation\">(</span>textTracks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> enTrack <span class=\"token operator\">=</span> textTracks<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTrackById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'caption_en'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*</span>\n<span class=\"token comment\">Method to get active text track. Active track depends on the user</span>\n<span class=\"token comment\">*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getActiveTextTrack</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textTracks</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> activeTextTrack<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> track <span class=\"token keyword\">of</span> textTracks<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>            \n        <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">.</span><span class=\"token property-access\">mode</span> <span class=\"token operator\">==</span> <span class=\"token string\">'showing'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            activeTextTrack <span class=\"token operator\">=</span> track<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>activeTextTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>            \n        activeTextTrack<span class=\"token punctuation\">.</span><span class=\"token property-access\">oncuechange</span> <span class=\"token operator\">=</span> onCueChange<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword control-flow\">return</span> activeTextTrack<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onCueChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>        \n    <span class=\"token keyword\">const</span> captionSpan <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio_caption'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> cueText <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> activeCue <span class=\"token keyword\">of</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">activeCues</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cueText <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token operator\">+</span>activeCue<span class=\"token punctuation\">.</span><span class=\"token property-access\">text</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    captionSpan<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerText</span> <span class=\"token operator\">=</span> cueText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Text file for caption.</p>\n<div class=\"remark-highlight\"><pre class=\"language-vtt\"><code class=\"language-vtt\">WEBVTT - podcast_sample.vtt\r\n\r\n00:01.000 --&#x26;gt; 00:04.000\r\n- Never drink liquid nitrogen.\r\n\r\n00:05.000 --&#x26;gt; 00:09.000\r\n- It will perforate your stomach.\r\n- You could die.\r\n\r\n00:07.000 --&#x26;gt; 00:13.000\r\n- This is an overlapping caption\r\n- Will it work?</code></pre></div>\n<p>Text file for subtitle.</p>\n<div class=\"remark-highlight\"><pre class=\"language-vtt\"><code class=\"language-vtt\">WEBVTT - podcast_sample_02.vtt\r\n\r\nNOTE\r\nThis is a sample note/comment\r\n\r\n1\r\n00:01.000 --&#x26;gt; 00:04.000\r\n- Ta en kopp varmt te.\r\n- Det är inte varmt.\r\n\r\n2\r\n00:05.000 --&#x26;gt; 00:09.000\r\n- Har en kopp te.\r\n- Det smakar som te.\r\n\r\nNOTE This last line may not translate well.\r\n\r\n3\r\n00:10.000 --&#x26;gt; 00:15.000\r\n- Ta en kopp</code></pre></div>\n<h2>What's Next</h2>\n<p>Need to work on how to generate transcripts from audio files. As of now my understanding is that we need to use some cloud services for it. Also I want to learn more about</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/54663735/1520750\">Stackoverflow answer</a></li>\n</ul>\n"},"__N_SSG":true}