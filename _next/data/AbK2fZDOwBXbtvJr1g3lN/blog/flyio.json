{"pageProps":{"id":"flyio","meta":{"title":"Deploying a nodejs app in fly.io and some struggles","description":"This is a brief writeup about deploying a simple nodejs application in fly.io. While doing it I had to overcome few technical difficulties and if you can avoid it, it may help you to save some time.","published":true,"publishedAt":"2023-03-19T00:00:00.000Z","updatedAt":"2023-03-19T00:00:00.000Z","category":"tech","image":"banners/71","keywords":["expresjs","flyio","powershell"],"authors":["Krishna Mohan A M"]},"content":"<p>This week I've been working on a side project to build and api wrapper for <a href=\"https://podcastindex.org/\">podcast index</a>. .NET is my forte, but I want to try my hands on a new stack and chose <a href=\"https://expressjs.com/\">expressjs</a>. I've created some hello-world stuff in <code>expressjs</code> before, but this time I wanted to create a full-blown API.</p>\n<h2>Creating the API</h2>\n<p>API creation was comparatively straight forward. I picked typescript for expressjs and everything went smooth. I added <a href=\"https://www.npmjs.com/package/morgan\">morgan</a> for minimal logging along with <code>concurrently</code> and <code>nodemon</code>. Also, I used <code>swagger-ui-express</code> and <code>tsoa</code> for swagger document generation. As always everything worked fine in local. ðŸ˜‚</p>\n<h2>Why Fly.io?</h2>\n<p>I chose <a href=\"https://fly.io\">fly.io</a> because I heard good things about them and also it's recommended by <a href=\"https://github.com/jlongster\">James Longster</a> for <a href=\"https://github.com/actualbudget/actual-server#deploying\">actual-budget</a>. Their documentation was really good.</p>\n<h2><code>flyctl</code> installation</h2>\n<p>Since I work from a windows machine, I had to install their command line tool for windows.</p>\n<div class=\"remark-highlight\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">iwr</span> https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>fly<span class=\"token punctuation\">.</span>io/install<span class=\"token punctuation\">.</span>ps1 <span class=\"token operator\">-</span>useb <span class=\"token punctuation\">|</span> <span class=\"token function\">iex</span>\n</code></pre></div>\n<p>I used powershell occasionally, still that looked like a strange command for me. Soon, I came to know that all these are just shorthand aliases. <code>iwr</code> is the shorthand for <code>Invoke-WebRequest</code> and <code>iex</code> is the shorthand for <code>Invoke-Expression</code>. So this command means that we send a web request to fetch the powershell file and then execute it. <code>-useb</code> denotes <code>-UseBasicParsing</code>, which was not found in the <a href=\"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.3#-usebasicparsing\">MS documentation</a>, I got it from <a href=\"https://www.reddit.com/r/PowerShell/comments/njbz47/what_does_useb_do_to_invokewebrequest/\">reddit</a>.</p>\n<h2>Create an app on fly</h2>\n<p>You can create an app in fly for your local source code by running the command <code>flyctl launch</code>. This command will scan the source directory and create <code>dockerfile</code> and <code>fly.toml</code>. You should be logged in for its successful completion.</p>\n<h2>Deployment</h2>\n<p>I'm using some confidential keys, I got form podcastindex.org. So I had to set that in the environment variables. Fly.io helps us to set the envirionment vairables by setting the secrets. You can run the command <code>flyctl secrets set KEY=VALUE</code> to set secrets. Once set, you can use <code>flyctl secrets list</code> to view the list of secrets created.</p>\n<p>Run the command <code>flyctl deploy</code> for deploying your application. This command will package your application as a docker container and will deploy in one of the machines. So far so good.</p>\n<h2>Trouble 1: Deployment succeeded but endpoints are not reachable. ðŸ™„</h2>\n<p>I got over-excited and went to auto-pilot mode. I should've reviewed the <code>dockerfile</code> before deployment. In the <code>dockerfile</code> it was configured the <code>CMD</code> instruction as <code>CMD [ \"npm\", \"run\", \"start\" ]</code> and I haven't added any <code>start</code> script in my npm scripts. I added that and redeployed.</p>\n<h2>Trouble 2: PodcastIndex is returning unauthorized</h2>\n<p>We've set the api keys and secrets in environment variables. What could possible go wrong? ðŸ¤”</p>\n<p>I added some logs and redeployed the app to monitor the secrets set in production. I noticed that the secret value in production is different from the actual. This issue was due to the symbol <code>$</code> in the secret string. When i ran the command <code>flyctl secrets set KEY=xxxx$xxxx</code>, <code>$</code> was getting replaced with the word <code>flyctl</code>. So in production it was coming as <code>xxxxflyctlxxxx</code>. to fix this i had to escape the character <code>$</code> using backtick <strong>(`)</strong>. I reset the secret using backtick and it worked after redeployment.</p>\n<h2>Wrap up</h2>\n<p>All sunday I was sitting in front of the monitor. I'm feeling bit tired and sleepy now. It was so tiresome even though it looked so simple. Definitely not a good way to spend your weekend.</p>\n"},"__N_SSG":true}