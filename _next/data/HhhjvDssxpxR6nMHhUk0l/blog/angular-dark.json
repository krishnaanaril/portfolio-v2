{"pageProps":{"id":"angular-dark","meta":{"title":"Revisiting Angular and Material Theming | Implementing Light-Dark Mode","description":"Learn how to create a light-dark mode switch in Angular with Material Theming. This guide walks you through designing a custom theme, generating theme files, and seamlessly integrating them into your project.","published":true,"publishedAt":"2025-01-26T00:00:00.000Z","updatedAt":"2025-01-26T00:00:00.000Z","category":"tech","image":"banners/77","keywords":["angular","tutorial","material"],"authors":["Krishna Mohan A M"]},"content":"<p>When I first started working with Angular and Material Theming for my side projects, creating custom themes felt daunting. Perhaps it was because I didn’t fully grasp the theming concepts back then—or maybe I was just too lazy to dig deep into it. As a result, I stuck with the pre-built themes.</p>\n<p>I did manage to implement a light-dark mode switch for my <a href=\"https://hackernews.krishnamohan.dev/\">hackernews clone</a> but the solution was far from ideal. At the time, I achieved this by swapping entire CSS stylesheets, with each stylesheet representing a theme. While it worked, I wasn’t happy with the result.</p>\n<p>In recent years, I’ve primarily been working with ReactJS, and my interest in Angular had faded. However, today, I decided to brush up on my Angular skills and revisit the light-dark mode switch. To my surprise, the tooling has improved significantly, and implementing the feature was much easier this time. So, let’s dive in!</p>\n<h2>Create a New Angular Project and Add Material</h2>\n<p>Start by following the <a href=\"https://angular.dev/installation#create-a-new-project\">Angular</a> and <a href=\"https://material.angular.io/guide/getting-started#install-angular-material\">Material</a> documentation to create a new project and integrate the Material library into your app.</p>\n<h2>Create a Custom Theme</h2>\n<p>To design your custom theme, you can use the <a href=\"https://material-foundation.github.io/material-theme-builder/\">Material Theme Builder</a>. This tool allows you to experiment with different color palettes and preview how Material components will look with your chosen colors.</p>\n<p>Although the tool lets you download generated CSS stylesheets, I found that the CSS variables were not in the correct format. For this reason, I chose not to use the generated CSS directly. However, the Theme Builder was invaluable in helping me select a color palette and understand the overall look and feel.</p>\n<p>Once you’re happy with your colors, you can use the <a href=\"https://github.com/angular/components/blob/main/src/material/schematics/ng-generate/theme-color/README.md\">Material 3 Custom Theme Schematic</a> to generate the theme CSS file. Here’s what you’ll need to do:</p>\n<ol>\n<li>Run the schematic command:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">ng generate @angular/material:theme-color\n</code></pre></div>\n<ol start=\"2\">\n<li>Answer a few prompts to define your theme:</li>\n</ol>\n<ul>\n<li>Primary color (required)</li>\n<li>Secondary color (optional)</li>\n<li>Tertiary color (optional)</li>\n<li>Neutral color (optional)</li>\n<li>High-contrast values (optional)</li>\n<li>Output directory for the theme file (optional; defaults to the current directory)</li>\n<li>CSS or SCSS format (optional; defaults to SCSS)</li>\n</ul>\n<p>Although Angular recommends using SCSS, I opted for CSS in this case.</p>\n<p><img src=\"/images/77_01.PNG\" alt=\"\"></p>\n<h2>Updating the code</h2>\n<p>Once your theme file is generated, update your <code>angular.json</code> file to include the theme CSS. For this example, I saved the CSS file in the public folder.</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"styles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"public/theme.css\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"src/styles.css\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>Next, create a new component that includes a toggle button to switch between light and dark modes.</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> effect<span class=\"token punctuation\">,</span> OnInit<span class=\"token punctuation\">,</span> Renderer2<span class=\"token punctuation\">,</span> signal <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MatButtonModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/material/button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MatIconModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/material/icon'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MatTooltipModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/material/tooltip'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'app-theme-picker'</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>MatButtonModule<span class=\"token punctuation\">,</span> MatTooltipModule<span class=\"token punctuation\">,</span> MatIconModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></span>\n<span class=\"token string\">    &#x3C;button mat-icon-button (click)=\"changeMode()\"></span>\n<span class=\"token string\">      @if (mode() == 'dark') {</span>\n<span class=\"token string\">      &#x3C;mat-icon></span>\n<span class=\"token string\">          light_mode</span>\n<span class=\"token string\">      &#x3C;/mat-icon></span>\n<span class=\"token string\">      } @else {</span>\n<span class=\"token string\">      &#x3C;mat-icon></span>\n<span class=\"token string\">          dark_mode</span>\n<span class=\"token string\">      &#x3C;/mat-icon></span>\n<span class=\"token string\">      }</span>\n<span class=\"token string\">    &#x3C;/button></span>\n<span class=\"token string\">  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  styleUrl<span class=\"token operator\">:</span> <span class=\"token string\">'./theme-picker.component.css'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemePickerComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n\n  mode <span class=\"token operator\">=</span> <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> storageKey <span class=\"token operator\">=</span> <span class=\"token string\">'docs-theme-storage-current-name'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\">   *</span>\n<span class=\"token doc-comment comment\">   */</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> renderer<span class=\"token operator\">:</span> Renderer2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">effect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">mode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">,</span> <span class=\"token string\">'color-scheme'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">,</span> <span class=\"token string\">'color-scheme'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> currentTheme <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStoredThemeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentTheme<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>currentTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> newColorScheme <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">?</span> <span class=\"token string\">\"dark\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"light\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">changeMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">mode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">storeTheme</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">mode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">storeTheme</span><span class=\"token punctuation\">(</span>theme<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">[</span>ThemePickerComponent<span class=\"token punctuation\">.</span>storageKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> theme<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getStoredThemeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">[</span>ThemePickerComponent<span class=\"token punctuation\">.</span>storageKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">clearStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>ThemePickerComponent<span class=\"token punctuation\">.</span>storageKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Add this component to your webpage, and you’re done!</p>\n<p><a href=\"/videos/dark-mode.webm\">Demo</a></p>\n<p>That’s it! With the improved tooling and resources available, implementing custom themes and a light-dark mode switch in Angular has become much simpler. Give it a try, and let me know your thoughts!</p>\n"},"__N_SSG":true}